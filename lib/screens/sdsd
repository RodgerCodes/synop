code != null
            ? code != []
                ? RefreshIndicator(
                    onRefresh: fetchData,
                    child: Container(
                      color: Colors.blueGrey[800],
                      child: ListView.builder(
                        itemBuilder: (context, index) {
                          date = code[index]['createdAt'];
                          DateTime tday = DateTime.parse(date);
                          var formatedDate =
                              DateFormat.yMMMd('en_US').add_jm().format(tday);
                          // print(formatedDate);
                          return Padding(
                            padding: const EdgeInsets.fromLTRB(10, 5, 10, 2),
                            child: Container(
                              height: 210,
                              width: double.infinity,
                              child: Card(
                                color: Colors.blueGrey[900],
                                margin: EdgeInsets.fromLTRB(0, 20, 0, 0),
                                elevation: 0.5,
                                child: ListTile(
                                    // isThreeLine: true,
                                    key: Key(code[index]['_id']),
                                    title: Padding(
                                      padding: const EdgeInsets.fromLTRB(
                                          0, 10, 0, 0),
                                      child: Text(
                                        code[index]['creator']['name'],
                                        style: TextStyle(
                                            fontSize: 20, color: Colors.blue),
                                      ),
                                    ),
                                    subtitle: Column(
                                      children: [
                                        Padding(
                                          padding: const EdgeInsets.fromLTRB(
                                              0, 10, 0, 5),
                                          child: Text(
                                            code[index]['code'],
                                            style: TextStyle(
                                                fontSize: 18,
                                                color: Colors.white,
                                                letterSpacing: 1.3),
                                          ),
                                        ),
                                        Padding(
                                          padding: const EdgeInsets.only(
                                              top: 10, bottom: 5),
                                          child: Text(
                                            formatedDate,
                                            style:
                                                TextStyle(color: Colors.white),
                                          ),
                                        )
                                      ],
                                    ),
                                    trailing: code[index]['creator']['_id'] ==
                                            user['msg']['_id']
                                        ? IconButton(
                                            icon: Icon(
                                              Icons.delete,
                                              color: Colors.white,
                                              size: 30,
                                            ),
                                            onPressed: () {
                                              setState(() {
                                                del = code[index]['_id'];
                                                // isSelected = true;
                                              });
                                              Dialogs.showLoadingDialog(
                                                  context, _keyLoader);
                                              AuthService()
                                                  .deleteCode(tok, del)
                                                  .then((val) {
                                                Fluttertoast.showToast(
                                                    msg: val.data['msg'],
                                                    toastLength:
                                                        Toast.LENGTH_SHORT,
                                                    gravity: ToastGravity.TOP,
                                                    timeInSecForIosWeb: 1,
                                                    backgroundColor:
                                                        Colors.blue,
                                                    textColor: Colors.white,
                                                    fontSize: 16.0);
                                                fetchData();
                                                Future.delayed(
                                                    Duration(seconds: 3), () {
                                                  Navigator.of(
                                                          _keyLoader
                                                              .currentContext,
                                                          rootNavigator: true)
                                                      .pop();
                                                });
                                              });

                                              setState(() {
                                                isSelected = false;
                                              });
                                            },
                                          )
                                        : Text('')),
                              ),
                            ),
                          );
                        },
                        itemCount: code.length,
                      ),
                    ),
                  )
                : Center(
                    child: Text(
                      'There is nothing inside',
                      style: TextStyle(color: Colors.black, fontSize: 20),
                    ),
                  )
            : Container(
                color: Colors.blueGrey[800],
                child: Center(
                  child: CircularProgressIndicator(),
                ),
              ),